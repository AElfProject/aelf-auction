/* This files is part of the Hello World smart contract example that is included in Boilerplate.
 * It is only the definition of the contract, implementation is located in the "contract" folder
 * and tests are located in the "test" folder.
 *
 * You can use this as a basic template for new contracts.
 * 
 * When building Boilerplate or the contract project located in the "../contract/AElf.Contracts.Auction/" 
 * protoc (the protobuf compiler) will be invoked and this file will produce a .c.cs file and .g.cs file, in the 
 * "../contract/AElf.Contracts.Auction/Protobuf/Generated/" folder. 
 */

// the version of the language, use proto3 for contracts
syntax = "proto3";

// some core imports for aelf chain types
import "aelf/core.proto";
import "aelf/options.proto";

// import for using the google.protobuf.Empty type.
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// the name of the C# namespace in which the contract code will be,
// generated code will also be in this namespace.
option csharp_namespace = "AElf.Contracts.Auction";

// the contract definition: a gRPC service definition.
service AuctionContract {

    // the full name of the C# class that will contain the state (here <namespace>.<state-class-name> format).
    option (aelf.csharp_state) = "AElf.Contracts.Auction.AuctionContractState";

    // an action defined as a gRPC service method.
    // this action take a google.protobuf.Empty (placeholder for void) as input
    // and returns a custom defined type: HelloReturn.
    rpc Hello (google.protobuf.Empty) returns (HelloReturn) {
    }

    rpc Create (CreateDto) returns (CreateResultDto) {
    }

    rpc Bid (BidDto) returns (BidResultDto) {

    }

    rpc Initialize (InitializeDto) returns (google.protobuf.Empty) {
        
    }
}

//will use virtual address to call back to __callback_auction
message AuctionNotification {
    aelf.Hash auction_id = 1;
    aelf.Address winner = 2;
}

enum AuctionStatus {
    ACTIVE = 0;
    ENDED = 1;
    CANCELLED = 2;
}
message Auction {


    aelf.Address address = 1;
    string token_symbol = 2;
    int64 min_amount = 3;
    google.protobuf.Timestamp expired_date = 4;

    aelf.Address last_bidder = 5;
    int64 last_bidder_amount = 6;
    AuctionStatus status = 7;
}

message CreateDto {
    aelf.Address address = 1;
    string token_symbol = 2;
    int64 min_amount = 3;
    google.protobuf.Timestamp expired_date = 4;
}


message InitializeDto {

}

message CreateResultDto {
    aelf.Hash id = 1;
}

message BidDto {
    aelf.Hash id = 1;
    int64 amount = 2;
}
enum BidStatus {
    PENDING = 0;
    AWARDED = 1;
    REJECTED = 2;
}
message BidResultDto {
    BidStatus status = 1;
}

message BidEvent {
    option (aelf.is_event) = true;
    aelf.Hash id = 1 [(aelf.is_indexed) = true];
    aelf.Address bidder = 2 [(aelf.is_indexed) = true];
    string symbol = 3;
    sint64 amount = 4;
}

message BidSuccessEvent {
    option (aelf.is_event) = true;
    aelf.Hash id = 1 [(aelf.is_indexed) = true];
    aelf.Address bidder = 2 [(aelf.is_indexed) = true];
    string symbol = 3;
    sint64 amount = 4;
}

// a custom message, used as the return type of the Hello action
message HelloReturn {
    string Value = 1;
}